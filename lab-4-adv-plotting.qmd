---
title: "Lab 4. Advanced Plotting"
author: "Jared Joseph"
format:
    html:
      self-contained: true
editor: source
---

## Introduction

Click here to access the lab on Github Classroom: [Github Classroom Assignment for Lab 4: Advanced Plotting](XXXXX)



## The Data

The data we will be using today comes from the [U.S. Department of Education College Scorecard](https://collegescorecard.ed.gov/). The college scorecard collects important data about universities across the country such as cost of attendance, acceptance rates, graduation rates, and the income of students from that institution after graduation. It also gives information on the student body, including how graduates from each major do after graduation. If you are curious, [you can see Smith's page here](https://collegescorecard.ed.gov/school/?167835-Smith-College).

The full scorecard data set is huge. It includes information about over 6500 institutions in the U.S., and has more than 3000 columns documenting information about those institutions. Today we will be using the `rscorecard` package to get a subset of the data.

To use the `rscorecard` package, you will need to get an Application Programming Interface (API) key. API keys grant you direct access to data that is often otherwise limited. You get to pull data directly into R without needing to download files from the web, and the provider gets to limit the data you can actually get. This arrangement is usually beneficial for everyone.

To get an API key for the college scorecard data, [you will need to request one on the data.gov web portal](https://api.data.gov/signup/). Once you fill out your information, you should get an email almost immediately with a personalized API key. This key is unique to you, so it is important to keep it safe. *You should never include your API keys in a file, especially those you commit with git. Other people can look through your git history and find your personal key to use for nefarious purposes!*

Once you have your key, run the following command in your console, replacing "SCORECARD_KEY" with your unique key:

```
library(rscorecard)

sc_key(<SCORECARD_KEY>)
```

This will save your key to your R install. **For here on, you can run `sc_get()` to load your API key from memory** (until you re-install R). You will need to run that command as a part of the code whenever you want to get scorecard data. Run the following code to get our data for today:

```{r}
# set what variables we want

# school context
scorecard_variables_context = c("unitid", "instnm", "city", "highdeg", "control", "hbcu", "annhi", "tribal", "aanapii", "hsi", "nanti")

# student info
scorecard_variables_students = c("unitid", "instnm", "ugds", "adm_rate", "costt4_a", "costt4_p", "pcip27", "pctfloan", "pctpell",  "admcon7", "cdr3")

# Get context data
scorecard_2020_context <- sc_init() |>       # Set up our API 'call'
  sc_year(2020) |>                           # Set the year to only 2020
  sc_filter(stabbr == "MA") |>               # Ask for only MA data
  sc_select_(scorecard_variables_context) |> # Set variables
  sc_get()                                   # Get the thing!

scorecard_2017_context <- sc_init() |>
  sc_year(2017) |>            
  sc_filter(stabbr == "MA") |>
  sc_select_(scorecard_variables_context) |>
  sc_get()

scorecard_2014_context <- sc_init() |>
  sc_year(2014) |>            
  sc_filter(stabbr == "MA") |>
  sc_select_(scorecard_variables_context) |>
  sc_get()

# Get student data
scorecard_2020_student <- sc_init() |>      
  sc_year(2020) |>                   
  sc_filter(stabbr == "MA") |>       
  sc_select_(scorecard_variables_students) |>
  sc_get()                           

scorecard_2017_student <- sc_init() |>
  sc_year(2017) |>            
  sc_filter(stabbr == "MA") |>
  sc_select_(scorecard_variables_students) |>
  sc_get()

scorecard_2014_student <- sc_init() |>
  sc_year(2014) |>            
  sc_filter(stabbr == "MA") |>
  sc_select_(scorecard_variables_students) |>
  sc_get()
```

We now have six dataframes containing data for MA universities and colleges. You will also need to download the scorecard documentation for this lab to understand the variables. You can find both the Data Dictionary and the Technical Documentation [on the scorecard website](https://collegescorecard.ed.gov/data/documentation/). I would save both in the `docs/` directory within your project folder.

Once you have downloaded the documentation, take some time to read up about each of the variables we will be using. The search function is helpful here.

:::{.callout-note}
### Question 1

Combine all of the scorecard dataframes into one called `scorecard_all`. Optionally, remove the now redundant dataframes from your environment.
:::

```{r}

#<REPLACE THIS COMMENT WITH YOR ANSWER>
# Data Aggregation & Subsetting @	Meets Standard

library(dplyr)

# rbind the years into one DF
scorecard_context_all = rbind(scorecard_2020_context, scorecard_2017_context, scorecard_2014_context)
scorecard_student_all = rbind(scorecard_2020_student, scorecard_2017_student, scorecard_2014_student)

# join the diff variables into one df
# shouldn't matter what join type they use
scorecard_all = full_join(scorecard_context_all, scorecard_student_all, by = c("unitid", "instnm", "year"))

# tidy up
rm(scorecard_2020_context, scorecard_2017_context, scorecard_2014_context,
   scorecard_2020_student, scorecard_2017_student, scorecard_2014_student,
   scorecard_context_all, scorecard_student_all)
```








